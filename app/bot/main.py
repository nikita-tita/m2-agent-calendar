"""
–£–ø—Ä–æ—â—ë–Ω–Ω—ã–π –≥–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –±–æ—Ç–∞
"""
import asyncio
import logging
import os

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞ –ü–ï–†–í–´–ú –î–ï–õ–û–ú
from dotenv import load_dotenv
load_dotenv()

from aiogram import Bot, Dispatcher
from aiogram.enums import ParseMode
from aiogram.client.default import DefaultBotProperties
from aiogram.fsm.storage.redis import RedisStorage

from app.bot.handlers import callback, photo, start, text, voice
from app.bot.middlewares.db import DatabaseMiddleware
from app.bot.middlewares.logging import LoggingMiddleware
from app.config import settings

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
if not os.getenv("TELEGRAM_BOT_TOKEN"):
    logger.error("TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è.")
    print("‚ùå –ù–µ–æ–±—Ö–æ–¥–∏–º TELEGRAM_BOT_TOKEN!")
    print("üí° –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω —É @BotFather –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é:")
    print("   export TELEGRAM_BOT_TOKEN='your-bot-token'")
    exit(1)

if not os.getenv("OPENAI_API_KEY"):
    logger.warning("OPENAI_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω! AI-—Ñ—É–Ω–∫—Ü–∏–∏ –±—É–¥—É—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω—ã.")
    print("‚ö†Ô∏è  OPENAI_API_KEY –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
    print("üí° –î–ª—è –ø–æ–ª–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ:")
    print("   export OPENAI_API_KEY='sk-your-openai-key'")

try:
    settings = settings
except Exception as e:
    logger.error(f"–û—à–∏–±–∫–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö: {e}")
    print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
    exit(1)
from app.database import create_pool

# –û–±–Ω–æ–≤–ª—è–µ–º —É—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫
logger.setLevel(settings.LOG_LEVEL.upper())

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –±–æ—Ç–∞"""
    
    # –°–æ–∑–¥–∞—ë–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
    bot = Bot(
        token=settings.TELEGRAM_BOT_TOKEN,
        default=DefaultBotProperties(parse_mode=ParseMode.HTML)
    )
    
    dp = Dispatcher()
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º middleware
    dp.message.middleware(DatabaseMiddleware())
    dp.callback_query.middleware(DatabaseMiddleware())
    dp.message.middleware(LoggingMiddleware())
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    start.register_handlers(dp)
    text.register_handlers(dp)
    voice.register_handlers(dp)
    photo.register_handlers(dp)
    callback.register_handlers(dp)
    
    logger.info("ü§ñ –£–ø—Ä–æ—â—ë–Ω–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å-–±–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º polling
    try:
        await dp.start_polling(bot)
    finally:
        await bot.session.close()

if __name__ == "__main__":
    asyncio.run(main()) 