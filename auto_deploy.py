#!/usr/bin/env python3
"""
ü§ñ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–∞–∑–≤—ë—Ä—Ç—ã–≤–∞–Ω–∏–µ M¬≤ Agent Calendar
–î–µ–ª–∞–µ—Ç –≤—Å—ë —Å–∞–º, –∫—Ä–æ–º–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π
"""
import subprocess
import requests
import time
import os
import sys

def run_command(cmd, description=""):
    """–í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º"""
    print(f"üîß {description}")
    print(f"   $ {cmd}")
    
    result = subprocess.run(cmd.split(), capture_output=True, text=True)
    
    if result.returncode == 0:
        print(f"   ‚úÖ –£—Å–ø–µ—à–Ω–æ")
        if result.stdout.strip():
            print(f"   üìù {result.stdout.strip()}")
    else:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {result.stderr.strip()}")
        
    return result

def push_to_github(repo_url):
    """–ê–≤—Ç–æ–ø—É—à –≤ GitHub"""
    print("üì§ –ó–∞–≥—Ä—É–∂–∞—é –∫–æ–¥ –≤ GitHub...")
    
    # –î–æ–±–∞–≤–ª—è–µ–º remote
    run_command(f"git remote add origin {repo_url}", "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ remote")
    
    # –ü—É—à
    result = run_command("git push -u origin main", "–ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–¥–∞")
    
    if result.returncode == 0:
        print("‚úÖ –ö–æ–¥ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω –≤ GitHub!")
        return True
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏. –í–æ–∑–º–æ–∂–Ω–æ remote —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
        # –ü—Ä–æ–±—É–µ–º force push
        run_command("git push -f origin main", "Force push")
        return True

def setup_railway_webhook(railway_url, bot_token):
    """–ê–≤—Ç–æ–Ω–∞—Å—Ç—Ä–æ–π–∫–∞ webhook"""
    webhook_url = f"{railway_url}/api/v1/webhook"
    telegram_api_url = f"https://api.telegram.org/bot{bot_token}/setWebhook"
    
    payload = {
        "url": webhook_url,
        "allowed_updates": ["message", "callback_query", "inline_query"]
    }
    
    print(f"üîó –ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook: {webhook_url}")
    
    try:
        response = requests.post(telegram_api_url, json=payload, timeout=10)
        result = response.json()
        
        if result.get("ok"):
            print("‚úÖ Webhook —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ webhook: {result.get('description', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return False

def test_deployment(railway_url):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–≤—ë—Ä—Ç—ã–≤–∞–Ω–∏—è"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–≤—ë—Ä—Ç—ã–≤–∞–Ω–∏—è...")
    
    # –¢–µ—Å—Ç health endpoint
    try:
        response = requests.get(f"{railway_url}/health", timeout=30)
        if response.status_code == 200:
            print("‚úÖ Health check –ø—Ä–æ—à—ë–ª")
        else:
            print(f"‚ùå Health check failed: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ health check: {e}")
    
    # –¢–µ—Å—Ç Mini App
    try:
        response = requests.get(f"{railway_url}/api/v1/miniapp/", timeout=30)
        if response.status_code == 200:
            print("‚úÖ Mini App –¥–æ—Å—Ç—É–ø–µ–Ω")
        else:
            print(f"‚ùå Mini App –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ Mini App: {e}")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∞–≤—Ç–æ–¥–µ–ø–ª–æ—è"""
    print("ü§ñ M¬≤ AGENT CALENDAR - –ê–í–¢–û–î–ï–ü–õ–û–ô")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    if len(sys.argv) < 2:
        print("üìã –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
        print("   python auto_deploy.py <GITHUB_REPO_URL> [RAILWAY_URL]")
        print("")
        print("üìù –ü—Ä–∏–º–µ—Ä:")
        print("   python auto_deploy.py https://github.com/username/m2-agent-calendar.git")
        print("   python auto_deploy.py repo_url https://your-app.railway.app")
        return
    
    repo_url = sys.argv[1]
    railway_url = sys.argv[2] if len(sys.argv) > 2 else None
    
    bot_token = "7794113902:AAHIPTjgr1ZI5dz1b7m0P6xQK_NhmAKQ1KY"
    
    print(f"üì¶ GitHub Repo: {repo_url}")
    print(f"üöÄ Railway URL: {railway_url or '–ë—É–¥–µ—Ç –ø–æ–ª—É—á–µ–Ω –ø–æ–∑–∂–µ'}")
    print("")
    
    # 1. –ü—É—à –≤ GitHub
    if push_to_github(repo_url):
        print("‚úÖ –≠—Ç–∞–ø 1: GitHub –≥–æ—Ç–æ–≤")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ GitHub, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º...")
    
    print("")
    print("üìã –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò (–¢–†–ï–ë–£–Æ–¢ –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò):")
    print("1. –ó–∞–π–¥–∏—Ç–µ –Ω–∞ railway.app")
    print("2. –ù–∞–∂–º–∏—Ç–µ 'New Project' -> 'Deploy from GitHub'")
    print("3. –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π m2-agent-calendar")
    print("4. –î–æ–±–∞–≤—å—Ç–µ —Å–µ—Ä–≤–∏—Å PostgreSQL")
    print("5. –í Variables –¥–æ–±–∞–≤—å—Ç–µ:")
    print("   TELEGRAM_BOT_TOKEN=7794113902:AAHIPTjgr1ZI5dz1b7m0P6xQK_NhmAKQ1KY")
    print("   OPENAI_API_KEY=–≤–∞—à_–∫–ª—é—á")
    print("6. –î–æ–∂–¥–∏—Ç–µ—Å—å –¥–µ–ø–ª–æ—è")
    print("7. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –ø—É–±–ª–∏—á–Ω—ã–π URL")
    print("8. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python auto_deploy.py repo_url YOUR_RAILWAY_URL")
    print("")
    
    # 2. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook (–µ—Å–ª–∏ –µ—Å—Ç—å Railway URL)
    if railway_url:
        print("üîó –ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook...")
        if setup_railway_webhook(railway_url, bot_token):
            print("‚úÖ –≠—Ç–∞–ø 2: Webhook –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
        
        # 3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
        print("")
        test_deployment(railway_url)
        
        print("")
        print("üéâ –ê–í–¢–û–î–ï–ü–õ–û–ô –ó–ê–í–ï–†–®–Å–ù!")
        print(f"üì± –ë–æ—Ç: @m2_agentcalendar_bot")
        print(f"üåê Mini App: {railway_url}/api/v1/miniapp/")
        print("‚úÖ –í—Å—ë –≥–æ—Ç–æ–≤–æ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")

if __name__ == "__main__":
    main() 