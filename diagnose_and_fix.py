#!/usr/bin/env python3
"""
üîß M¬≤ Agent Calendar - –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º —Å–∏—Å—Ç–µ–º—ã
"""

import os
import sys
import requests
import json
from pathlib import Path

def print_header(text):
    print(f"\n{'='*60}")
    print(f"üîß {text}")
    print(f"{'='*60}")

def print_step(step, text):
    print(f"\n{step}. {text}")
    print("-" * 40)

def check_env_file():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞ .env"""
    print_step("1", "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
    
    env_path = Path(".env")
    if not env_path.exists():
        print("‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        # –°–æ–∑–¥–∞—ë–º .env —Ñ–∞–π–ª
        env_content = """# M¬≤ Agent Calendar - Environment Variables
TELEGRAM_BOT_TOKEN=7794113902:AAHIPTjgr1ZI5dz1b7m0P6xQK_NhmAKQ1KY
OPENAI_API_KEY=your_openai_key_here

# Database
DATABASE_URL=postgresql://user:password@localhost:5432/m2_calendar

# Security
SECRET_KEY=your-secret-key-here
ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=30

# Redis (optional)
REDIS_URL=redis://localhost:6379

# Environment
ENVIRONMENT=production
DEBUG=False
"""
        with open(".env", "w") as f:
            f.write(env_content)
        print("‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª .env —Å –±–∞–∑–æ–≤—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏")
        print("‚ö†Ô∏è  –í–ê–ñ–ù–û: –î–æ–±–∞–≤—å—Ç–µ –≤–∞—à OPENAI_API_KEY –≤ —Ñ–∞–π–ª .env")
    else:
        print("‚úÖ –§–∞–π–ª .env —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")

def check_main_app():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    print_step("2", "–ü—Ä–æ–≤–µ—Ä–∫–∞ app/main.py")
    
    main_path = Path("app/main.py")
    if main_path.exists():
        print("‚úÖ app/main.py –Ω–∞–π–¥–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
        content = main_path.read_text()
        if "FastAPI" in content and "/webhook" in content:
            print("‚úÖ FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        else:
            print("‚ö†Ô∏è  –í–æ–∑–º–æ–∂–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã –≤ app/main.py")
    else:
        print("‚ùå app/main.py –Ω–µ –Ω–∞–π–¥–µ–Ω!")

def check_requirements():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ requirements.txt"""
    print_step("3", "–ü—Ä–æ–≤–µ—Ä–∫–∞ requirements.txt")
    
    req_path = Path("requirements.txt")
    if req_path.exists():
        print("‚úÖ requirements.txt –Ω–∞–π–¥–µ–Ω")
        
        content = req_path.read_text()
        required_packages = ["fastapi", "uvicorn", "sqlalchemy", "aiogram"]
        missing = []
        
        for pkg in required_packages:
            if pkg.lower() not in content.lower():
                missing.append(pkg)
        
        if missing:
            print(f"‚ö†Ô∏è  –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –ø–∞–∫–µ—Ç—ã: {', '.join(missing)}")
        else:
            print("‚úÖ –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–∞–∫–µ—Ç—ã –≤–∫–ª—é—á–µ–Ω—ã")
    else:
        print("‚ùå requirements.txt –Ω–µ –Ω–∞–π–¥–µ–Ω!")

def test_webhook_endpoint(url):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ webhook endpoint"""
    print_step("4", f"–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ webhook: {url}")
    
    webhook_url = f"{url}/api/v1/webhook"
    health_url = f"{url}/health"
    
    try:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ health endpoint
        response = requests.get(health_url, timeout=10)
        if response.status_code == 200:
            print(f"‚úÖ Health check: {response.json()}")
        else:
            print(f"‚ùå Health check failed: {response.status_code}")
            
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ webhook endpoint
        test_data = {"message": {"text": "/start", "from": {"id": 123}}}
        response = requests.post(webhook_url, json=test_data, timeout=10)
        if response.status_code == 200:
            print(f"‚úÖ Webhook —Ä–∞–±–æ—Ç–∞–µ—Ç: {response.json()}")
            return True
        else:
            print(f"‚ùå Webhook –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {response.status_code}")
            return False
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: {e}")
        return False

def setup_webhook(app_url):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram webhook"""
    print_step("5", "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram webhook")
    
    bot_token = "7794113902:AAHIPTjgr1ZI5dz1b7m0P6xQK_NhmAKQ1KY"
    webhook_url = f"{app_url}/api/v1/webhook"
    
    try:
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook
        telegram_url = f"https://api.telegram.org/bot{bot_token}/setWebhook"
        response = requests.post(telegram_url, json={"url": webhook_url})
        
        if response.status_code == 200:
            result = response.json()
            if result.get("ok"):
                print(f"‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {webhook_url}")
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ Telegram API: {result}")
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    return False

def main():
    print_header("–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê M¬≤ AGENT CALENDAR")
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
    check_env_file()
    check_main_app()
    check_requirements()
    
    # –ó–∞–ø—Ä–æ—Å URL –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    print_step("4", "–í–≤–µ–¥–∏—Ç–µ URL –≤–∞—à–µ–≥–æ —Ä–∞–∑–≤—ë—Ä–Ω—É—Ç–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
    print("–ü—Ä–∏–º–µ—Ä—ã:")
    print("- Render: https://m2-agent-calendar.onrender.com")
    print("- Railway: https://your-app.railway.app")
    print("- Heroku: https://your-app.herokuapp.com")
    
    app_url = input("\nüîó URL –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: ").strip()
    
    if not app_url:
        print("‚ùå URL –Ω–µ —É–∫–∞–∑–∞–Ω!")
        return
    
    if not app_url.startswith("http"):
        app_url = f"https://{app_url}"
    
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    if test_webhook_endpoint(app_url):
        if setup_webhook(app_url):
            print_header("üéâ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!")
            print(f"‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: {app_url}")
            print(f"‚úÖ Webhook: {app_url}/api/v1/webhook")
            print(f"‚úÖ Telegram bot: @m2_agentcalendar_bot")
            print("\nüì± –¢–µ–ø–µ—Ä—å –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –±–æ—Ç–∞ –≤ Telegram –∫–æ–º–∞–Ω–¥–æ–π /start")
        else:
            print_header("‚ö†Ô∏è  WEBHOOK –ù–ï –ù–ê–°–¢–†–û–ï–ù")
            print("–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ webhook –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    else:
        print_header("‚ùå –ü–†–û–ë–õ–ï–ú–´ –° –ü–†–ò–õ–û–ñ–ï–ù–ò–ï–ú")
        print("–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –∏–ª–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        print("\nüîß –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
        print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤ –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ö–æ—Å—Ç–∏–Ω–≥–∞")
        print("2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Start Command: uvicorn app.main:app --host 0.0.0.0 --port $PORT")

if __name__ == "__main__":
    main() 